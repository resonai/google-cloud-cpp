from importlib.machinery import SourceFileLoader
common_bzl = SourceFileLoader('common_bzl',
                              'google_cloud_cpp_common.bzl').load_module()
google_cloud_cpp_common_hdrs = common_bzl.google_cloud_cpp_common_hdrs
google_cloud_cpp_common_srcs = common_bzl.google_cloud_cpp_common_srcs

# ExtCommand(
#   'generate_build_info',
#   cmd = ['bash', '-c',
#          'V=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown"); sed -e "s;@CMAKE_CXX_FLAGS@;$CC_FLAGS;"  -e "s;.{CMAKE_CXX_FLAGS_.*};$COMPILATION_MODE;"  -e "s;@GOOGLE_CLOUD_CPP_BUILD_METADATA@;${V};"  < internal/build_info.cc.in >  internal/build_info.cc'
#   ],
#   in_buildenv='//devops:ywz-buildenv-base',
#   work_dir='third_party/google-cloud-cpp/google/cloud/',
#   cmd_env={
#     'CC_FLAGS': '-stdlib=libc++',
#     'COMPILATION_MODE': 'release',  #TODO(eyal): not sure what this shiuld be
#   },
#   #cachable=True
# )

CppLib('google_cloud_cpp_common',
       sources=google_cloud_cpp_common_srcs + ['internal/build_info.cc'],
       headers=google_cloud_cpp_common_hdrs,
       deps=[
         # ':generate_build_info',
       ],
       in_buildenv='//devops:ywz-buildenv-base',
       build_params={
         'extra_compile_flags' : '-Ithird_party/google-cloud-cpp/'
       },
)
